{"version":3,"sources":["Filter.js","CountrySelect.js","Chart.js","App.js","serviceWorker.js","index.js"],"names":["Filter","_this$props","this","props","title","options","itemClass","onSelected","selectedValue","react_default","a","createElement","Fragment","className","map","item","key","text","name","onClick","PureComponent","CountrySelect","disabled","react_select_browser_esm","id","isDisabled","value","getOptionValue","c","code","getOptionLabel","styles","control","state","Object","objectSpread","border","borderRadius","minHeight","backgroundColor","opacity","input","color","placeholder","fontSize","menu","margin","menuList","padding","dropdownIndicator","&:hover","cursor","option","height","display","justifyContent","alignItems","borderBottom","isFocused","textAlign","onChange","newValue","searchable","require","registerLocale","COLORS","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleMouseEnter","o","dataKey","setState","hover","handleMouseLeave","formatLegend","entry","style","_this2","chartData","countries","getCountryName","yTicks","es6","width","data","strokeDasharray","vertical","left","ticks","domain","dataMax","Math","max","animationDuration","contentStyle","labelStyle","itemStyle","fontWeight","formatter","onMouseEnter","onMouseLeave","l","i","type","dot","fill","strokeWidth","r","strokeOpacity","stroke","activeDot","Component","i18nCountries","i18nMapping","NED","NGR","LAT","MON","BAH","URU","ZIM","DEN","INA","PUR","SCG","MAD","PAR","CRO","TPE","YUG","GRE","BUL","TCH","SUI","SLO","RSA","FRG","GER","POR","URS","CHI","CRC","PHI","ALG","UNK","HAI","BAR","IRI","countryNames","RUS","ALL_TOURNAMENTS","App","extra","allCountries","keys","forEach","tour","tournament","year","round","country","find","push","test","moreThanUSA","dataFull","ATP","Wimbledon","usa","USA","sort","b","localeCompare","calculateChart","getName","_this$state","countryCount","val","getTickValues","Array","undefined","v","ceil","_this3","ReactGA","event","category","action","label","defineProperty","_this4","indexOf","splice","d","reduce","acc","length","includes","_this5","_this$state2","selectedCountries","filter","notSelectedCountries","src_Filter","tours","handleChange","src_CountrySelect","toggleCountry","bind","rounds","t","join","Chart","Boolean","window","location","hostname","match","initialize","pageview","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4181c3f0.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport './less/index.css';\n\nclass Filter extends PureComponent {\n  render() {\n    const {title, options, itemClass, onSelected, selectedValue} = this.props\n    return (\n      <>\n        {title}\n        <div className=\"menu\">\n          {options.map((item) => {\n            const key = item.key || item\n            const text = item.name || item\n            let className = \"item \"\n            className += itemClass\n            if(key === selectedValue) {\n              className += \" selected\"\n            }\n            return <div className={className} onClick={() => onSelected(key)}>\n                {text}\n              </div>\n          })}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Filter;\n","import React, { PureComponent } from 'react';\nimport Select from 'react-select';\nimport './less/index.css';\n\nclass CountrySelect extends PureComponent {\n  render() {\n    const {options, onSelected, disabled} = this.props\n    return (\n      <div className=\"country-input\">\n        <Select\n            id=\"select\"\n            options={options}\n            isDisabled={disabled}\n            value={null}\n            getOptionValue={(c) => c.code}\n            getOptionLabel={(c) => c.name}\n            styles={{\n              control: (styles, state) => ({\n                ...styles,\n                border: 0,\n                borderRadius: 0,\n                minHeight: 0,\n                backgroundColor: \"#616170\",\n                opacity: state.isDisabled ? 0.5 : 1\n              }),\n              input: (styles) => ({\n                ...styles,\n                color: \"white\"\n              }),\n              placeholder: (styles) => ({\n                ...styles,\n                color: \"white\",\n                fontSize: \"11px\",\n                opacity: 0.5\n              }),\n              menu: (styles) => ({\n                ...styles,\n                margin: 0\n              }),\n              menuList: (styles) => ({\n                ...styles,\n                backgroundColor: \"#616170\",\n                padding: 0\n              }),\n              dropdownIndicator: (styles) => ({\n                ...styles,\n                color: \"hsl(0,0%,80%)\",\n                '&:hover': {\n                  backgroundColor: \"#515158\",\n                  color: \"hsl(0,0%,80%)\",\n                  cursor: \"pointer\"\n                }\n              }),\n              option: (styles, state) => ({\n                ...styles,\n                height: \"36px\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                borderBottom: \"1px solid #2b2b35\",\n                backgroundColor: state.isFocused ? \"#515158\" : \"#616170\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                '&:hover': {\n                  backgroundColor: \"#515158\"\n                }\n              })\n            }}\n            placeholder=\"Select or type...\"\n            onChange={(newValue) => onSelected(newValue.code)}\n            searchable={true}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CountrySelect;\n","import React, { Component } from 'react';\nimport {ResponsiveContainer, LineChart, XAxis, YAxis, Line, Legend, Tooltip, CartesianGrid} from \"recharts\"\nimport './less/index.css';\n\nvar i18nCountries = require(\"i18n-iso-countries\");\ni18nCountries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n\nconst COLORS = [\"#3dadb2\", \"#F3832E\", \"#C32E9A\", \"#289428\", \"#EEDE51\"]\n\nclass CountrySelect extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      hover: null\n    }\n  }\n  handleMouseEnter = (o) => {\n    const { dataKey } = o\n\n    this.setState({\n      hover: dataKey\n    })\n  }\n\n  handleMouseLeave = () => {\n    this.setState({\n      hover: null,\n    })\n  }\n\n  formatLegend = (value, entry) => {\n    const {color} = entry\n    return <span style={{color}}>{value}</span>\n  }\n\n  render() {\n    const {chartData, countries, getCountryName, yTicks} = this.props\n    return (\n      <ResponsiveContainer width=\"95%\" height={400}>\n        <LineChart\n          data={chartData}>\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n          <XAxis\n            dataKey=\"year\"\n            padding={{ left: 10 }}\n            ticks={[1970, 1975, 1980, 1985, 1990, 1995, 2000, 2005, 2010, 2015]}/>\n          <YAxis\n            ticks={yTicks}\n            domain={[0, dataMax => Math.max(dataMax, 5)]} />\n          <Tooltip\n            animationDuration={500}\n            contentStyle={{\n              backgroundColor: \"#494955\",\n              borderRadius: \"5px\"\n            }}\n            labelStyle={{color: \"white\"}}\n            itemStyle={{fontWeight: \"bold\"}} />\n          <Legend \n            formatter={this.formatLegend}\n            onMouseEnter={this.handleMouseEnter}\n            onMouseLeave={this.handleMouseLeave} />\n          {countries.map((l, i) => {\n            const key = getCountryName(l)\n            const {hover} = this.state\n              return <Line\n                type=\"monotone\"\n                dot={{ fill: \"#2b2b35\", strokeWidth: 1, r: hover === key ? 4 : 3}}\n                strokeOpacity={!hover || hover === key ? 1 : 0.5}\n                strokeWidth={hover === key ? 3 : 2}\n                stroke={COLORS[i]}\n                dataKey={key}\n                activeDot={{ strokeWidth: 1, r: 5 }} />\n          })}\n        </LineChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n\nexport default CountrySelect;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport './less/index.css';\n\nimport data from './data.json';\nimport dataFull from './dataFull.json';\nimport test from './test.json';\nimport Filter from \"./Filter\";\nimport rounds from \"./rounds.json\"\nimport tours from \"./tours.json\"\nimport CountrySelect from \"./CountrySelect\";\nimport Chart from \"./Chart\";\nimport './flags.css';\n\nvar i18nCountries = require(\"i18n-iso-countries\");\ni18nCountries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n\nconst i18nMapping = {\n  NED: \"NLD\",\n  NGR: \"NGA\",\n  LAT: \"LVA\",\n  MON: \"MCO\",\n  BAH: \"BHS\",\n  URU: \"URY\",\n  ZIM: \"ZWE\",\n  DEN: \"DNK\",\n  INA: \"IDN\",\n  PUR: \"PRI\",\n  SCG: \"Serbia and Montenegro\",\n  MAD: \"MDG\",\n  PAR: \"PRY\",\n  CRO: \"HRV\",\n  TPE: \"TWN\",\n  YUG: \"Yugoslavia\",\n  GRE: \"GRC\",\n  BUL: \"BGR\",\n  TCH: \"Czechoslovakia\",\n  SUI: \"CHE\",\n  SLO: \"SVN\",\n  RSA: \"ZAF\",\n  FRG: \"West Germany\",\n  GER: \"DEU\",\n  POR: \"PRT\",\n  URS: \"USSR\",\n  CHI: \"CHL\",\n  CRC: \"CRI\",\n  PHI: \"PHL\",\n  ALG: \"DZA\",\n  UNK: \"\",\n  HAI: \"HTI\",\n  BAR: \"BRB\",\n  IRI: \"IRN\"\n}\n\nconst countryNames = {\n  RUS: \"Russia\"\n}\n\nconst ALL_TOURNAMENTS = [\"Australian Open\", \"Roland Garros\", \"Wimbledon\", \"US Open\"]\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    const extra = {}\n    const allCountries = []\n    Object.keys(data).forEach((tour) => {\n      extra[tour] = {}\n      Object.keys(data[tour]).forEach((tournament) => {\n        extra[tour][tournament] = {}\n        Object.keys(data[tour][tournament]).forEach((year) => {\n          extra[tour][tournament][year] = {}\n          Object.keys(data[tour][tournament][year]).forEach((round) => {\n            extra[tour][tournament][year][round] = {}\n            data[tour][tournament][year][round].forEach((country) => {\n              let c = extra[tour][tournament][year][round][country]\n              if(c) {\n                extra[tour][tournament][year][round][country]++\n              } else {\n                extra[tour][tournament][year][round][country] = 1\n              }\n\n              const countryObj = allCountries.find((c) => c.code === country)\n              if (!countryObj) {\n                const name = this.getCountryName(country)\n                if(name) {\n                  allCountries.push({\n                    code: country,\n                    name\n                  })\n                }\n              }\n            })\n          })\n        })\n      })\n    })\n\n    Object.keys(test).forEach((tour) => {\n      Object.keys(test[tour]).forEach((tournament) => {\n        extra[tour][tournament][2019] = {}\n          Object.keys(test[tour][tournament][2019]).forEach((round) => {\n            extra[tour][tournament][2019][round] = test[tour][tournament][2019][round]\n            Object.keys(test[tour][tournament][2019][round]).map((country) => {\n              const countryObj = allCountries.find((c) => c.code === country)\n              if (!countryObj) {\n                const name = this.getCountryName(country)\n                if(name) {\n                  allCountries.push({\n                    code: country,\n                    name\n                  })\n                }\n              }\n            })\n          })\n      })\n    })\n\n    const moreThanUSA = []\n    const r = \"R32\"\n    Object.keys(dataFull.ATP.Wimbledon).forEach((year) => {\n      const usa = dataFull.ATP.Wimbledon[year][r].USA\n      Object.keys(dataFull.ATP.Wimbledon[year][r]).forEach((country) => {\n        if(dataFull.ATP.Wimbledon[year][r][country] > usa) {\n          moreThanUSA.push(country)\n        }\n      })\n    })\n\n    //console.info(JSON.stringify(extra))\n\n    this.state = {\n      tournament: \"Wimbledon\",\n      countries: [\"FRA\", \"GBR\"],\n      round: \"R32\",\n      tour: \"ATP\",\n      allCountries: allCountries.sort((a,b) => a.name.localeCompare(b.name))\n    }\n  }\n\n  componentWillMount() {\n    \n  }\n\n  componentDidMount() {\n    this.calculateChart()\n  }\n\n  getCountryName(country) {\n    return countryNames[country] || i18nCountries.getName(country, \"en\") || i18nCountries.getName(i18nMapping[country], \"en\")\n  }\n\n  calculateChart() {\n    const {tournament, tour, countries, round} = this.state\n\n    const chartData = []\n    for(let i = 1968; i < 2020; i++) {\n      chartData.push({year: i})\n    }\n\n    let max = 0\n\n    if(!dataFull[tour][tournament]) return\n\n    Object.keys(dataFull[tour][tournament]).forEach((year) => {\n      if(!dataFull[tour][tournament][year][round]) return\n      const countryCount = dataFull[tour][tournament][year][round]\n      countries.forEach((c) => {\n        const val = countryCount[c] || 0\n        max = Math.max(max, val)\n        const country = this.getCountryName(c)\n        chartData[year - 1968][country] = val\n      })\n    })\n\n    this.setState({\n      chartData,\n      yTicks: this.getTickValues(max)\n    })\n  }\n\n  getTickValues(max) {\n    if (max < 10) {\n      return new Array(max < 5 ? 6 : max + 1).fill(undefined).map((v, i) => i)\n    }\n\n    if (max < 20) {\n      return new Array(Math.ceil(max / 2) + 1).fill(undefined).map((v, i) => i * 2)\n    }\n\n    if (max < 50) {\n      return new Array(Math.ceil(max / 5) + 1).fill(undefined).map((v, i) => i * 5)\n    }\n\n    return new Array(Math.ceil(max / 10) + 1).fill(undefined).map((v, i) => i * 10)\n  }\n\n  handleChange(key, value) {\n    ReactGA.event({\n      category: \"filter\",\n      action: key,\n      label: value\n    })\n    this.setState({\n      [key]: value\n    }, () => {\n      this.calculateChart()\n    })\n  }\n\n  toggleCountry(country) {\n    const {countries} = this.state\n    const i = countries.indexOf(country)\n\n    if(i >= 0) {\n      countries.splice(i,1)\n      ReactGA.event({\n        category: \"filter\",\n        action: \"remove country\",\n        label: country\n      })\n    } else {\n      countries.push(country)\n      ReactGA.event({\n        category: \"filter\",\n        action: \"add country\",\n        label: country\n      })\n    }\n\n    this.setState({\n      countries\n    }, () => {\n      this.calculateChart()\n    })\n  }\n\n  countCountries(d) {\n    const {countries} = this.state\n    return d.reduce((acc, val) => {\n      if(countries.length > 0 && !countries.includes(val)) return acc\n      if(acc[val]) acc[val]++\n      else acc[val] = 1\n\n      return acc\n    }, {})\n  }\n\n  render() {\n    const {tournament, round, tour, allCountries, countries, yTicks} = this.state\n    const selectedCountries = allCountries.filter((c) => countries.includes(c.code))\n    const notSelectedCountries = allCountries.filter((c) => !countries.includes(c.code))\n    return (\n      <div className=\"App\">\n        <div className=\"filters\">\n          <Filter\n            title=\"Pick a Tour\"\n            itemClass=\"tour\"\n            options={tours}\n            onSelected={(newValue) => this.handleChange(\"tour\", newValue)}\n            selectedValue={tour} />\n          <Filter\n            title=\"Pick a Tournament\"\n            itemClass=\"tournament\"\n            options={ALL_TOURNAMENTS}\n            onSelected={(newValue) => this.handleChange(\"tournament\", newValue)}\n            selectedValue={tournament} />\n          Choose the Countries\n          <CountrySelect\n            disabled={countries.length >= 5}\n            options={notSelectedCountries}\n            onSelected={this.toggleCountry.bind(this)} />\n          <div className=\"menu countries\">\n            {selectedCountries.map((c) => {\n              let className = \"item country\"\n              if(countries.includes(c.code)) {\n                className += \" selected\"\n              }\n              return <div className={className}>\n                  <div className=\"countryName\">{c.name || c.code}</div>\n                  <div className=\"remove\" onClick={() => this.toggleCountry(c.code)}>\n                    <div>x</div>\n                  </div>\n                </div>\n            })}\n            <div className=\"item empty\">Add up to 5 countries</div>\n            <div className=\"item empty\">Add up to 5 countries</div>\n            <div className=\"item empty\">Add up to 5 countries</div>\n            <div className=\"item empty\">Add up to 5 countries</div>\n            <div className=\"item empty\">Add up to 5 countries</div>\n          </div>\n          <Filter\n            title=\"Pick a Round\"\n            itemClass=\"round\"\n            options={rounds}\n            onSelected={(newValue) => this.handleChange(\"round\", newValue)}\n            selectedValue={round} />\n        </div>\n        <div className=\"main\">\n          <div className=\"title\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <span>Grand Slam Stats</span>\n          </div>\n          <div className=\"chart\">\n            <div className=\"crumbs\">\n              <span>{tours.find((t) => t.key === tour).name}'s tour</span>\n              >\n              <span>{tournament}</span>\n              >\n              <span>{countries.map((c) => this.getCountryName(c)).join(\", \")}</span>\n              >\n              <span>{rounds.find((r) => r.key === round).name}</span>\n            </div>\n            {this.state.chartData && \n              <Chart chartData={this.state.chartData} countries={countries} getCountryName={this.getCountryName} yTicks={yTicks} />}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ReactGA from 'react-ga';\n\nReactGA.initialize('UA-143243252-1');\nReactGA.pageview(\"home\");\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}